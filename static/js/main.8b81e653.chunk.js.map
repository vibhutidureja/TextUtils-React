{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForm","text","setText","useState","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","handleUpClick","console","log","newText","toUpperCase","showAlert","handleLoClick","toLowerCase","handleClearClick","split","length","defaultProps","aboutText","alert","role","word","lower","charAt","slice","capitalize","msg","data-bs-dismiss","App","setMode","setAlert","message","setTimeout","document","body","Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.8b81e653.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n   <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\"> */}\r\n          {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link> */}\r\n        {/* </li> */}\r\n      </ul>\r\n      {/* <form className=\"d-flex\" role=\"search\"> */}\r\n        {/* <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/> */}\r\n        {/* <button className=\"btn btn-primary\" type=\"submit\">Search</button> */}\r\n      {/* </form> */}\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\"  id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\nNavbar.propTypes= {title: PropTypes.string.isRequired,\r\n                    aboutText: PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps={\r\n    title:'Set title here',\r\n    aboutText:'About text here'\r\n}","import React, {useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>{\r\n        console.log(\"Uppercase was clicked\"+text);\r\n        let newText= text.toUpperCase();\r\n        setText(newText);\r\n         props.showAlert(\"Converted to uppercase!\", \"success\");\r\n    }\r\n     const handleLoClick=()=>{\r\n        console.log(\"Lowercase was clicked\"+text);\r\n        let newText= text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase!\", \"success\");\r\n    }\r\n       const handleClearClick=()=>{\r\n        console.log(\"Clearing \");\r\n        let newText= \"\";\r\n        setText(newText);\r\n    }\r\n    const handleOnChange=(event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText]= useState('Enter text here');\r\n  return (\r\n    <>   \r\n    <div className='container'style={{color: props.mode==='dark'?'white':'black'}} >\r\n    <h1>{props.heading}</h1>\r\n    <div className=\"mb-3\">\r\n    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white',  color:props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n    </div>\r\n    <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n    <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n     <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h1>Your text summary</h1>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <p>{0.008*text.split(\" \").length}Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter sommething in the textbox to preview\"}</p>\r\n    </div>\r\n    </>\r\n\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n       <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default alert\r\n","import './App.css';\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // light or dark mode\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#121212';\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Dark Mode';\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Light Mode';\n    }\n  };\n\n return (\n  <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n    <Alert alert={alert} />\n    <div className=\"container my-3\">\n      {/* <Switch>\n        <Route exact path=\"/about\">\n          <About />\n        </Route>\n        <Route exact path=\"/\">\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />\n        </Route>\n      </Switch> */}\n      <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />\n    </div>\n    {/* </Router> */}\n  </>\n);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}